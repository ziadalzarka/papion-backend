# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Address {
  country: Country!
  city: City!
  street: String
}

input AddressInput {
  country: Country!
  city: City!
  street: String
}

type AuthPayload {
  token: String!
  user: UserEntity!
}

type BaseUserEntity {
  _id: ID!
  name: String!
  email: String!
  phone: String
  address: Address
  userType: UserType!
}

enum BusinessCategory {
  Place
  Person
}

type BusinessUserEntity {
  _id: ID!
  name: String!
  email: String!
  phone: String
  address: Address
  userType: UserType!
  businessCategory: BusinessCategory!
}

enum City {
  Damanhur
}

type ClientUserEntity {
  _id: ID!
  name: String!
  email: String!
  phone: String
  address: Address
  userType: UserType!
}

enum Country {
  Egypt
}

input CreateBusinessUserInput {
  name: String!
  email: String!
  password: String!
  phone: String!
  address: AddressInput!
  businessCategory: BusinessCategory!
}

input CreateClientUserInput {
  name: String!
  email: String!
  password: String!
  phone: String!
  address: AddressInput!
}

type DatabaseEntity {
  _id: ID!
}

"""File upload scalar type"""
scalar File

input FileUploadInput {
  file: File!
}

input LogInPayload {
  email: String!
  password: String!
}

type Mutation {
  createWeddingWebsite(payload: WeddingWebsiteInput!): WeddingWebsiteEntity!
  signUpClientUser(payload: CreateClientUserInput!): UserEntity!
  signUpBusinessUser(payload: CreateBusinessUserInput!): UserEntity!
}

type Query {
  me: UserEntity!
  logIn(payload: LogInPayload!): AuthPayload!
  templates: [TemplateEntity!]!
}

type TemplateEntity {
  _id: ID!
  name: String!
  preview_url: String!
}

union UserEntity = BusinessUserEntity | ClientUserEntity

enum UserType {
  Admin
  Client
  Business
}

type WeddingWebsiteData {
  coupleName: String!
  image: File!
  description: String!
}

input WeddingWebsiteDataInput {
  coupleName: String!
  image: File!
  description: String!
}

type WeddingWebsiteEntity {
  _id: ID!
  subdomain: String!
  data: WeddingWebsiteData!
  user: ClientUserEntity!
  href: String!
}

input WeddingWebsiteInput {
  subdomain: String!
  data: WeddingWebsiteDataInput!
}
